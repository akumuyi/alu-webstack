#!/usr/bin/env bash

# Function to display information about a subdomain
display_info() {
    local domain="$1"
    local subdomain="$2"
    local record_type="$3"
    local destination="$4"
    echo "The subdomain $subdomain is a $record_type record and points to $destination"
}

# Function to audit subdomains
audit_subdomains() {
    local domain="$1"
    local subdomain="$2"

    # Default subdomains to check
    subdomains=("www" "lb-01" "web-01" "web-02")

    # If a specific subdomain is provided, only check that subdomain
    if [ -n "$subdomain" ]; then
        subdomains=("$subdomain")
    fi

    # Iterate through subdomains
    for sub in "${subdomains[@]}"; do
        # Use awk to extract information from DNS lookup
        result=$(nslookup "$sub.$domain" | awk '/^Name:/{name=$2} /^Address:/{address=$2} END{print name " " address}')
        if [[ -n "$result" ]]; then
            subdomain_name=$(echo "$result" | awk '{print $1}')
            subdomain_ip=$(echo "$result" | awk '{print $2}')
            display_info "$domain" "$subdomain_name" "A" "$subdomain_ip"
        else
            echo "No information found for $sub.$domain"
        fi
    done
}

# Main script logic
if [ "$#" -eq 1 ]; then
    # When only the domain parameter is provided, audit default subdomains
    audit_subdomains "$1"
elif [ "$#" -eq 2 ]; then
    # When both domain and subdomain parameters are provided, audit the specified subdomain
    audit_subdomains "$1" "$2"
else
    echo "Usage: $0 <domain> [subdomain]"
    exit 1
fi

